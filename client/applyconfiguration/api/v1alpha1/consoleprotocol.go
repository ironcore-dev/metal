// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ironcore-dev/metal/api/v1alpha1"
)

// ConsoleProtocolApplyConfiguration represents an declarative configuration of the ConsoleProtocol type for use
// with apply.
type ConsoleProtocolApplyConfiguration struct {
	Name *v1alpha1.ConsoleProtocolName `json:"name,omitempty"`
	Port *int32                        `json:"port,omitempty"`
}

// ConsoleProtocolApplyConfiguration constructs an declarative configuration of the ConsoleProtocol type for use with
// apply.
func ConsoleProtocol() *ConsoleProtocolApplyConfiguration {
	return &ConsoleProtocolApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ConsoleProtocolApplyConfiguration) WithName(value v1alpha1.ConsoleProtocolName) *ConsoleProtocolApplyConfiguration {
	b.Name = &value
	return b
}

// WithPort sets the Port field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Port field is set to the value of the last call.
func (b *ConsoleProtocolApplyConfiguration) WithPort(value int32) *ConsoleProtocolApplyConfiguration {
	b.Port = &value
	return b
}
