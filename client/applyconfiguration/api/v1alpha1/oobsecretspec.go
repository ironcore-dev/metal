// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// OOBSecretSpecApplyConfiguration represents an declarative configuration of the OOBSecretSpec type for use
// with apply.
type OOBSecretSpecApplyConfiguration struct {
	MACAddress     *string  `json:"macAddress,omitempty"`
	Username       *string  `json:"username,omitempty"`
	Password       *string  `json:"password,omitempty"`
	ExpirationDate *v1.Time `json:"expirationDate,omitempty"`
}

// OOBSecretSpecApplyConfiguration constructs an declarative configuration of the OOBSecretSpec type for use with
// apply.
func OOBSecretSpec() *OOBSecretSpecApplyConfiguration {
	return &OOBSecretSpecApplyConfiguration{}
}

// WithMACAddress sets the MACAddress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MACAddress field is set to the value of the last call.
func (b *OOBSecretSpecApplyConfiguration) WithMACAddress(value string) *OOBSecretSpecApplyConfiguration {
	b.MACAddress = &value
	return b
}

// WithUsername sets the Username field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Username field is set to the value of the last call.
func (b *OOBSecretSpecApplyConfiguration) WithUsername(value string) *OOBSecretSpecApplyConfiguration {
	b.Username = &value
	return b
}

// WithPassword sets the Password field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Password field is set to the value of the last call.
func (b *OOBSecretSpecApplyConfiguration) WithPassword(value string) *OOBSecretSpecApplyConfiguration {
	b.Password = &value
	return b
}

// WithExpirationDate sets the ExpirationDate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExpirationDate field is set to the value of the last call.
func (b *OOBSecretSpecApplyConfiguration) WithExpirationDate(value v1.Time) *OOBSecretSpecApplyConfiguration {
	b.ExpirationDate = &value
	return b
}
