// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
)

// MachineNetworkInterfaceApplyConfiguration represents an declarative configuration of the MachineNetworkInterface type for use
// with apply.
type MachineNetworkInterfaceApplyConfiguration struct {
	Name       *string                  `json:"name,omitempty"`
	MacAddress *string                  `json:"macAddress,omitempty"`
	IPRef      *v1.LocalObjectReference `json:"IPRef,omitempty"`
	SwitchRef  *v1.LocalObjectReference `json:"switchRef,omitempty"`
}

// MachineNetworkInterfaceApplyConfiguration constructs an declarative configuration of the MachineNetworkInterface type for use with
// apply.
func MachineNetworkInterface() *MachineNetworkInterfaceApplyConfiguration {
	return &MachineNetworkInterfaceApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *MachineNetworkInterfaceApplyConfiguration) WithName(value string) *MachineNetworkInterfaceApplyConfiguration {
	b.Name = &value
	return b
}

// WithMacAddress sets the MacAddress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MacAddress field is set to the value of the last call.
func (b *MachineNetworkInterfaceApplyConfiguration) WithMacAddress(value string) *MachineNetworkInterfaceApplyConfiguration {
	b.MacAddress = &value
	return b
}

// WithIPRef sets the IPRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPRef field is set to the value of the last call.
func (b *MachineNetworkInterfaceApplyConfiguration) WithIPRef(value v1.LocalObjectReference) *MachineNetworkInterfaceApplyConfiguration {
	b.IPRef = &value
	return b
}

// WithSwitchRef sets the SwitchRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SwitchRef field is set to the value of the last call.
func (b *MachineNetworkInterfaceApplyConfiguration) WithSwitchRef(value v1.LocalObjectReference) *MachineNetworkInterfaceApplyConfiguration {
	b.SwitchRef = &value
	return b
}
