// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfiguration

import (
	v1alpha1 "github.com/ironcore-dev/metal/api/v1alpha1"
	apiv1alpha1 "github.com/ironcore-dev/metal/client/applyconfiguration/api/v1alpha1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=metal.ironcore.dev, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("ConsoleProtocol"):
		return &apiv1alpha1.ConsoleProtocolApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Machine"):
		return &apiv1alpha1.MachineApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("MachineClaim"):
		return &apiv1alpha1.MachineClaimApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("MachineClaimNetworkInterface"):
		return &apiv1alpha1.MachineClaimNetworkInterfaceApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("MachineClaimSpec"):
		return &apiv1alpha1.MachineClaimSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("MachineClaimStatus"):
		return &apiv1alpha1.MachineClaimStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("MachineNetworkInterface"):
		return &apiv1alpha1.MachineNetworkInterfaceApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("MachineSpec"):
		return &apiv1alpha1.MachineSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("MachineStatus"):
		return &apiv1alpha1.MachineStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("OOB"):
		return &apiv1alpha1.OOBApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("OOBSecret"):
		return &apiv1alpha1.OOBSecretApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("OOBSecretSpec"):
		return &apiv1alpha1.OOBSecretSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("OOBSpec"):
		return &apiv1alpha1.OOBSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("OOBStatus"):
		return &apiv1alpha1.OOBStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Protocol"):
		return &apiv1alpha1.ProtocolApplyConfiguration{}

	}
	return nil
}
